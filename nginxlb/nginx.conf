worker_processes 1;
events {
    worker_connections  1024;
}
error_log /var/logs/nginx/error.log info;
http {
    upstream nginx {
        server nginx1:80;
        #server nginx2:80 backup;
        keepalive 100;
        #keepalive_timeout 75s;
        keepalive_requests 10000;
    }
    log_format json_combined escape=json
      '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"upstream_response_time":"$upstream_response_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"pipe":"$pipe",'
        '"http_connection":"$http_connection",'
        '"upstream_http_connection":"$upstream_http_connection",'
        '"connection":"$connection",'
        '"connection_requests":"$connection_requests"'
      '}';
    access_log /var/logs/nginx/access.log json_combined;
    resolver 127.0.0.11;
    server {
        listen 80 default_server;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        #proxy_set_header Connection $http_connection;
        location / {
            proxy_pass http://nginx;
            keepalive_requests 1200;
        }
        location = /stub_status {
            stub_status on;
            access_log off;
        }
        location = /tcp_status {
            content_by_lua_block {
              local handle = io.popen("/tcp_stat.sh")
              local result = handle:read("*a")
              handle:close()
              ngx.say(result)
            }
            access_log off;
        }
    }
}